#!/usr/bin/perl

# Copyright 2013, 2015, 2019 Regents of The University of Michigan.

# This file is part of geo-omics-scripts.

# Geo-omics-scripts is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.

# Geo-omics-scripts is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.

# You should have received a copy of the GNU General Public License along
# with Geo-omics-scripts.  If not, see <https://www.gnu.org/licenses/>.


=head1 NAME

renameHeaders - change the names of the sequence headers by inserting a user defined prefix.


=head1 SYNOPSIS

B<renameHeaders> -f fasta.file B<-prefix> "seq header prefix" B<-d> " "
OR
B<renameHeaders> -f fasta.file B<-suffix> "seq header prefix" B<-d> " "


=head1 DESCRIPTION

: Changes the names of the sequence headers by inserting a user defined prefix.


=head1 OPTIONS

=over 8

=item B<-suffix>

add after the header

=item B<-prefix>

add before the header

=item B<-d>

delimiter to follow the prefix; default= "_"

=item B<-o>

output file; default= "processID.fasta"

=back


=head1 Comments/Feedback/Beer

Sunit Jain, sunitj [AT] umich [DOT] edu
May 2012


=head1 SEE ALSO

L<omics(1)>, L<illumina-reads-processing(7)>

=head2 Other local resources

=over

=item [1]

L<HTML documentation|file:///usr/share/doc/geo-omics-scripts/html/index.html>

=item [2]

L<Omics workflow documentation [PDF]|file:///usr/share/doc/geo-omics-scripts/Geomicro-Illumina-Reads-Processing-Pipeline.pdf>

=back

=head2 Web

=over

=item [3]

L<Workflow documentation [PDF]|https://drive.google.com/open?id=0BxFSivK8RfJed05wamtrbEVUeE0>

=item [4]

L<Website|http://www.earth.lsa.umich.edu/geomicrobiology/>

=item [5]

L<Github repository|https://github.com/Geo-omics/scripts>

=back

=cut

use strict;
use Getopt::Long;

my $fasta;
my $prefix;
my $suffix;
my $out=$$.".fasta";
my $delim="_";

GetOptions(
	'f:s'=>\$fasta,
	'prefix:s'=>\$prefix,
	'suffix:s'=>\$suffix,
	'o:s'=>\$out,
	'd:s'=>\$delim,
	'h'=>sub{system('perldoc', $0); exit;},
);

my $insert = ($prefix ? $prefix : $suffix);
if (! $fasta || ! $insert){	system('perldoc', $0); exit; }

open (IN, $fasta)||die "[ERROR] $fasta: $!\n";
open (OUT, ">".$out);
my %sampleName;
my $h=0;
while(my $line=<IN>){
	next if ($line=~ m/^#/);
	chomp $line;
	$line=~ s/\r//;
	next unless $line;

	if ($line=~ m/^>/){
		$line=~ s/^>//;
		$sampleName{$line}++;
		my $newName;
		if ($prefix){
			$newName= $insert.$delim.$line;
		}
		elsif ($suffix){
			$newName= $line.$delim.$insert;
		}
		print OUT ">".$newName."\n";
		$h++;
	}
	else{
		print OUT $line."\n";
	}
}
close IN;
close OUT;

#print "Name of the Sample was:\t";
foreach my $k(keys %sampleName){
	print $k."\t".$sampleName{$k}."\n" if ($sampleName{$k} > 1);
}
print "Total Sequences: ".$h."\n";
