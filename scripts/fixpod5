#!/usr/bin/env python3
"""
Add SEE ALSO section to POD in perl scripts

Note: Makes assumptions about input, little error checking
"""
import argparse
import sys


argp = argparse.ArgumentParser(description=__doc__)
argp.add_argument('inputfile', type=argparse.FileType())
argp.add_argument('-w', '--write-to-file', action='store_true')

args = argp.parse_args()

see_also = """
=head1 SEE ALSO

L<omics(1)>, L<illumina-reads-processing(7)>

=head3 Other local resources

=over

=item 1

L<HTML documentation|file:///usr/share/doc/geo-omics-scripts/html/index.html>

=item 2

L<Omics workflow documentation [PDF]|file:///usr/share/doc/geo-omics-scripts/Geomicro-Illumina-Reads-Processing-Pipeline.pdf>

=back

=head3 Web

=over

=item 1

L<Workflow documentation [PDF]|https://drive.google.com/open?id=0BxFSivK8RfJed05wamtrbEVUeE0>

=item 2

L<Website|http://www.earth.lsa.umich.edu/geomicrobiology/>

=item 3

L<Github repository|https://github.com/Geo-omics/scripts>

=back

"""

out = ''
done = False

for line in args.inputfile:
    if line.startswith('=cut') and not done:
        # ensure consistent empty lines between sections
        out = out.rstrip() + '\n\n'
        # add section at the end
        out += see_also
        done = True  # in case we find a second =cut

    out += line

# write output
if args.write_to_file:
    args.inputfile.close()
    outfile = open(args.inputfile.name, 'w')
else:
    outfile = sys.stdout

outfile.write(out)
