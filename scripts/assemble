#!/bin/bash
#
# Copyright (c) 2016 Regents of The University of Michigan.
# All Rights Reserved.
#
# Author: Robert <heinro@med.umich.edu>
#

USAGE="[-h|--help|--no-color|-v|verbosity n]"
HELP="Assemble one Sample's fastq data"
ARG_HELP="    --cpus <n>  How many CPUs/threads to use.
    --clean-only  Remove previously created file and stop.
"
CHECK_PROGS="idba_ud quast.py blastn top5 extractSubSeq"
LONG_OPTIONS=cpus:,clean-only

##########################
# default variable values
##########################

CLEAN_ONLY=false
CPUS=4

# Required Databases
PATH2SILVA="/omics/PublicDB/silva/release_123/SILVA_123_SSURef_tax_silva.fasta"
PATH2BACT="/omics/PublicDB/NCBI/Bacteria/latest_16S.fasta"
PATH2ARCH="/omics/PublicDB/NCBI/Archaea/latest_16S.fasta"
# IDBA Parameters
MINK=52
MAXK=92
STEP=8

# other scripts
QUAST="/usr/bin/python $(which quast.py)"
#

handle_options () {
    if [ "$#" -gt 0 ]; then
	case "$1" in
	(--clean-only)
	    CLEAN_ONLY=true
	    return 1;;
	(--cpus)
	    CPUS="$2"
	    shift
	    return 2;;
        esac
    fi
}

# shellcheck source=../lib/liba.sh
# shellcheck disable=SC1091
. "$(dirname "$0")/../share/geo-omics-scripts/liba.sh" || echo "Failed to source script library" && exit 1

# handle non-option parameters
if [ "$#" -gt 0 ]; then
    abort "Unknown parameters: ${*}"
fi

#########################
# some input sanitation
#########################
[ -d "$WORK_DIR" ] || abort "$WORK_DIR is not accessible."

#################################
# do stuff
################################
spec=k${MINK}_${MAXK}_s${STEP}
scaf=$spec/scaffold.fa

cd "$WORK_DIR"

rm $V -rf ASSEMBLY
if $CLEAN_ONLY; then
    exit 0
fi

mkdir $V -p ASSEMBLY
mkdir $V -p ASSEMBLY/BLASTN
mkdir $V -p ASSEMBLY/PhyloSift
cd ASSEMBLY

info "Assembling..."
idba_ud -o $spec -r ../dt_int.fasta --num_threads "$CPUS" --mink $MINK --maxk $MAXK --step $STEP 2>&1 | tee $spec.log

info "Making assembly stats..."
$QUAST -f --meta -T "$CPUS" -l "Scaffolds, Contigs" $scaf $spec/contig.fa --output-dir quast_results

info "Searching for scaffolds with 16S..."
T1BLAST=BLASTN/sample_vs_silvaSSU.topHits.blastn
BBLAST=BLASTN/sample_subSeq_vs_bactNCBI.blastn
ABLAST=BLASTN/sample_subSeq_vs_archaeaNCBI.blastn
SSEQ=BLASTN/silvaSSU.topHits.fasta
mkdir -p BLASTN
blastn -query $scaf -db $PATH2SILVA -outfmt "7 std qlen stitle" -out BLASTN/sample_vs_silva.blastn -num_threads "$CPUS"
top5 -t 1 -b BLASTN/sample_vs_silva.blastn -o $T1BLAST
if [ ! -s BLASTN/sample_vs_silvaSSU.blastn ]; then
    info "Looking up top hits from 16S search for complete genomes in NCBI..."
    extractSubSeq -query -blast $T1BLAST -f $scaf -o $SSEQ
    blastn -query $SSEQ -db $PATH2BACT -outfmt "7 std qlen qcovs stitle" -out $BBLAST -num_threads "$CPUS"
    blastn -query $SSEQ -db $PATH2ARCH -outfmt "7 std qlen qcovs stitle" -out $ABLAST -num_threads "$CPUS"
    top5 -t 1 -b $BBLAST -o ${BBLAST/%blastn/top_hits.blastn}
    top5 -t 1 -b $ABLAST -o ${ABLAST/%blastn/top_hits.blastn}
fi

ln $V "$scaf" "$WORK_DIR"/scaffold.fa

info "[assembly done]"
# gmb: input: dt_int.fasta
# gmb: output: scaffold.fa
# gmb: args: --cpus {{ cpus }} --no-color
# gmb: cpus_min: 1
# gmb: cpus_max: CPUS
