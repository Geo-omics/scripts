#!/usr/bin/perl

=head1 NAME

changePGDBattribs - Change the attributes in "data/ptools-local/pgdbs/user/<NAME>/1.0/input/organism.dat" to avoid confusion while opening a PGDB.


=head1 SYNOPSIS

B<changePGDBattribs> B<-list> project_names.list


=head1 DESCRIPTION

Change the attributes in "data/ptools-local/pgdbs/user/<NAME>/1.0/input/organism.dat" to avoid confusion while opening a PGDB.


=head1 OPTIONS

=over 8

=item B<-list> I<CHAR>

List of the fasta files you used to run MetaPathways.

=item B<-data> I<CHAR>

Location of the pathway-tools data folder; default:/opt/packages/pathway-tools/data/

=item B<-prefix> I<CHAR>

If you wish to add a prefix to the names, add it here (no spaces allowed)

=item B<-bkp> I<BOOLEAN>

Keep the old version (just in case);

=item B<-version>, B<-v> I<BOOLEAN>

version of the current script

=item B<-help>, B<-h> I<BOOLEAN>

This message.

=back


=head1 AUTHOR

Sunit Jain, (Thu Feb 27 15:52:47 EST 2014)
sunitj [AT] umich [DOT] edu


=head1 LICENSE

This script is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.


=head1 DISCLAIMER

This script is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.


=head1 SEE ALSO

L<omics(1)>, L<illumina-reads-processing(7)>

=head3 Other local resources

=over

=item 1

L<HTML documentation|file:///usr/share/doc/geo-omics-scripts/html/index.html>

=item 2

L<Omics workflow documentation [PDF]|file:///usr/share/doc/geo-omics-scripts/Geomicro-Illumina-Reads-Processing-Pipeline.pdf>

=back

=head3 Web

=over

=item 1

L<Workflow documentation [PDF]|https://drive.google.com/open?id=0BxFSivK8RfJed05wamtrbEVUeE0>

=item 2

L<Website|http://www.earth.lsa.umich.edu/geomicrobiology/>

=item 3

L<Github repository|https://github.com/Geo-omics/scripts>

=back

=cut

use strict;
use Getopt::Long;
use File::Basename;
use File::Spec;
use File::Copy;

my $help;
my $version="changePGDBattribs\tv0.0.2b";
my ($list, $keepBkp, $prefix);
my $dataLoc="/opt/packages/pathway-tools/data/";

GetOptions(
	'l|list:s'=>\$list,
	'd|data:s'=>\$dataLoc,
	'p|prefix:s'=>\$prefix,
	'bkp|backup'=>\$keepBkp,
	'v|version'=>sub{print $version."\n"; exit;},
	'h|help'=>sub{system("perldoc $0 \| cat"); exit;},
);
print "\# $version\n";

my @ext=qw(.fasta .fa .fna .faa);
open(LIST, "<".$list)|| die $!;
while(my $line=<LIST>){
	next if ($line=~ /^#/);
	chomp $line;
	next unless $line;

	my $projectName=fileparse($line, @ext);
	my $orgFile=File::Spec->catfile($dataLoc, "ptools-local/pgdbs/user/", $projectName."cyc", "1.0/input/organism.dat");

	if (-e $orgFile){
		print $orgFile."\n";
		&changeAttributes($orgFile);
	}
}
close LIST;

sub changeAttributes{
	my $file=shift;
	my $bkp= $file.".bkp";

	copy($file, $bkp) || die "Could not create backup for $file:".$!."\n";
	
	my $out=$file;
	my ($FH, $OFH);
	open($FH, "<".$bkp)||die $!;
	open($OFH, ">".$out) || die $!;
	my $useThisName;
	while(my $line=<$FH>){
		if($line=~ /^ID/){
			my($tag, $value)=split(/\t/, $line);
			$useThisName=($prefix ? $prefix."_" : "").$value;
			print $OFH $line;
		}
		elsif($line=~ /^NAME/){
			print $OFH "NAME\t$useThisName";
		}
		elsif($line=~ /^ABBREV-NAME/){
			print $OFH "ABBREV-NAME\t$useThisName";
		}
		else{
			print $OFH $line;
		}
	}
	close $FH;
	close $OFH;
	unlink $bkp unless $keepBkp;
}

