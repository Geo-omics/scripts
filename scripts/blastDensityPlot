#!/usr/bin/perl

# Copyright 2014, 2015, 2019 Regents of The University of Michigan.

# This file is part of geo-omics-scripts.

# Geo-omics-scripts is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.

# Geo-omics-scripts is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.

# You should have received a copy of the GNU General Public License along
# with Geo-omics-scripts.  If not, see <https://www.gnu.org/licenses/>.


=head1 NAME

blastDensityPlot - Given multiple blasts to the same reference database, make density plot based on tabular blast outputs.


=head1 SYNOPSIS

B<blastDensityPlot> B<-b> path_to_all_blast_files B<-e> extension_of_all_blast_files B<-prefix> output_prefix


=head1 DESCRIPTION

Given multiple blasts to the same reference database, make density plot based on tabular blast outputs.


=head1 OPTIONS

=over 8

=item B<-blast>, B<-b> I<CHAR>

path to blast folder

=item B<-ext>, B<-e> I<CHAR>

extension used

=item B<-prefix>, B<-p> I<CHAR>

prefix for the output files

=item B<-perc> I<BOOLEAN>

Use Percent Identity [DEFAULT]

=item B<-evalue> I<BOOLEAN>

Use E-Values

=item B<-aln> I<BOOLEAN>

Use Alignment Length

=item B<-bs> I<BOOLEAN>

Use Bit Scores

=item B<-scaled> I<BOOLEAN>

Scale the graphs [0,1], such that all the peaks have the same height.

=item B<-tmp> I<BOOLEAN>

Keep intermediate files. Deletes the r-script and temporary output unless this flag is provided.

=item B<-verbose> I<BOOLEAN>

Get R log file

=item B<-version>, B<-v> I<BOOLEAN>

version of the current script

=item B<-help>, B<-h> I<BOOLEAN>

This message.

=back


=head1 NOTE

* Requires Rscript
* Requires R package 'ggplot2'
* Recommended that the blast outputs only be top hits. (Use "top5.pl")


=head1 AUTHOR

Sunit Jain, (Fri Mar 14 11:49:03 EDT 2014)
sunitj [AT] umich [DOT] edu


=head1 LICENSE

This script is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.


=head1 DISCLAIMER

This script is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.


=head1 SEE ALSO

L<omics(1)>, L<illumina-reads-processing(7)>

=head2 Other local resources

=over

=item [1]

L<HTML documentation|file:///usr/share/doc/geo-omics-scripts/html/index.html>

=item [2]

L<Omics workflow documentation [PDF]|file:///usr/share/doc/geo-omics-scripts/Geomicro-Illumina-Reads-Processing-Pipeline.pdf>

=back

=head2 Web

=over

=item [3]

L<Workflow documentation [PDF]|https://drive.google.com/open?id=0BxFSivK8RfJed05wamtrbEVUeE0>

=item [4]

L<Website|http://www.earth.lsa.umich.edu/geomicrobiology/>

=item [5]

L<Github repository|https://github.com/Geo-omics/scripts>

=back

=cut

use strict;
use Getopt::Long;
use File::Basename;

my($blast, $perc,$bs,$aln,$eval, $scaled, $keep_tmp, $verbose, $table, $help, $ani);
my $ext="blastn";
my $prefix=$$;
my $version="blastDensityPlot\tv0.1.5";
GetOptions(
	'b|blast:s'=>\$blast,
	't|table:s'=>\$table,
	'e|ext:s'=>\$ext,
	'p|prefix:s'=>\$prefix,
	'ani:f'=>\$ani,
	
	'perc'=>\$perc,
	'bs'=>\$bs,
	'evalue'=>\$eval,
	'aln'=>\$aln,
	'scaled'=>\$scaled,
	'tmp'=>\$keep_tmp,
	'verbose'=>\$verbose,
	
	'v|version'=>sub{print $version."\n"; exit;},
	'h|help'=>sub{system("perldoc $0 \| cat"); exit;},
);
print "\# $version\n";

die "# [FATAL] See '-h' for help on how to use the script\n" if (! $blast && ! $table);
my ($col, $col_name);
if($perc){ $col = 0; $col_name="Percent_ID"}
elsif($aln){ $col = 1; $col_name="Alignment_Length"}
elsif($bs){$col = -1; $col_name="Bit_Score"}
elsif($eval){$col = -2; $col_name="E_Value"}
else{$col = 0; $col_name="Percent_ID"}

if($table){
	&plot;
	exit 0;
}

my @files=<$blast/*.$ext>;
die "# [FATAL] Can't find \"$blast\"\n# Please check that the path exist or that you have sufficient privilages.\n" if (scalar(@files)==0);

my %REF;
$table=$prefix.".out";
open(OUT, ">".$table) || die $!;
print OUT "NAME\t$col_name\tSamples\n";
foreach my $file(@files){
	my ($FH, %seen);
	print "# Reading $file...\t";
	my $name2print=fileparse($file, ".".$ext);
	open($FH, "<".$file) || die $!;
	while(my $line=<$FH>){
		next if ($line=~ /^#/);
		chomp $line;
		next unless $line;
		
		my($query, $subj, @data)=split(/\t/, $line);
		
		next if $seen{$query};
		print OUT $subj."__".$name2print."\t".$data[$col]."\t".$name2print."\n";
		$seen{$query}++;
	}
	close $FH;
	print "DONE!\n";
}
close OUT;

&plot;
exit 0;

sub plot{
	my $pdf=$prefix."_".lc($col_name).($scaled ? "_scaled" : "").($ani ? "_withANI" : "").".pdf";
	if (-e $pdf){ $pdf=$prefix."_".lc($col_name).($scaled ? "_scaled" : "")."_".$$.".pdf"}
	my $ggplot_cmd;
	if($scaled){
		$ggplot_cmd="ggplot(myTable, aes(x=".$col_name.", color=as.factor(Samples), y=..scaled..), size=1) + stat_density(position=\"identity\", fill=NA) + theme_bw() + scale_colour_discrete(name  =\"Samples\")";
	}
	else{
		$ggplot_cmd="ggplot(myTable, aes(x=".$col_name.", color=as.factor(Samples))) + stat_density(position=\"identity\", fill=NA) + theme_bw() + scale_colour_discrete(name  =\"Samples\")";
	}

	if ($ani){
		$ggplot_cmd.="+ geom_vline(aes(xintercept=$ani), show_guide=F) +geom_text(aes(x=$ani, y=0, label=\"ANI\"), color=\"black\", angle=90, vjust=0, hjust=0)";
	}
	my $save_pdf="ggsave(file=\"$pdf\", width = 210, height = 297, units = \"mm\")";

	#Create command line Rscript
	print "# Creating the density plot...\t";
	my $script="-e 'library(ggplot2)' -e 'myTable=read.table(\"$table\", header = TRUE, row.names=NULL)' -e 'myPlot=$ggplot_cmd' -e '$save_pdf'";
	if ($verbose){
		$script.=" &> ".$prefix.".log";
	}
	else{
		$script.=" &> /dev/null";
	}
	
	# Execute Rscript
	system("Rscript ".$script);
	print "DONE!\n";
	
	# Remove intermediate files.
	unless($keep_tmp){
		unlink $table;
	}
}
