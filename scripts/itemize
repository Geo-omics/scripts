#!/usr/bin/perl

=head1 NAME

itemize - You you used mapper.pl for multiple datasets and you wish to get a comparison for each dataset. Use this script.


=head1 SYNOPSIS

B<itemize> B<-info> contigs.info B<-m>log mapper_output.log B<-out> output.tsv


=head1 DESCRIPTION

You you used mapper.pl for multiple datasets and you wish to get a comparison for each dataset. Use this script.


=head1 OPTIONS

=over 8

=item B<-info>, B<-i> I<CHAR>

A file containing the dataset info for each contig. One entry per line; FORMAT: Contig_Name <TAB> Dataset_Name.

=item B<-log>, B<-l> I<CHAR>

".log" output produced by the mapper.pl script.

=item B<-out>, B<-o> I<CHAR>

output produced by this script

=item B<-map>, B<-m> I<CHAR>

mapped output produced by the mapper.pl script. If you want the output from this script added to the mapper output.

=item B<-version>, B<-v> I<BOOLEAN>

version of the current script

=item B<-help>, B<-h> I<BOOLEAN>

This message.

=back


=head1 AUTHOR

Sunit Jain, (Thu Mar 13 11:51:59 EDT 2014)
sunitj [AT] umich [DOT] edu


=head1 LICENSE

This script is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.


=head1 DISCLAIMER

This script is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.


=head1 SEE ALSO

L<omics(1)>, L<illumina-reads-processing(7)>

=head2 Other local resources

=over

=item [1]

L<HTML documentation|file:///usr/share/doc/geo-omics-scripts/html/index.html>

=item [2]

L<Omics workflow documentation [PDF]|file:///usr/share/doc/geo-omics-scripts/Geomicro-Illumina-Reads-Processing-Pipeline.pdf>

=back

=head2 Web

=over

=item [3]

L<Workflow documentation [PDF]|https://drive.google.com/open?id=0BxFSivK8RfJed05wamtrbEVUeE0>

=item [4]

L<Website|http://www.earth.lsa.umich.edu/geomicrobiology/>

=item [5]

L<Github repository|https://github.com/Geo-omics/scripts>

=back

=cut

use strict;
use Getopt::Long;

my($info, $log, $map, $out);

my $help;
my $version="itemize.pl\tv0.1.0";
GetOptions(
	'i|info:s'=>\$info,
	'l|log:s'=>\$log,
	'm|map:s'=>\$map,
	'o|out:s'=>\$out,
	'v|version'=>sub{print $version."\n"; exit;},
	'h|help'=>sub{system("perldoc $0 \| cat"); exit;},
);
print "\# $version\n";

my %index;
open(INFO, "<".$info)|| die $!;
while(my $line=<INFO>){
	next if ($line=~ /^#/);
	chomp $line;
	next unless $line;

	my ($name, $set)=split(/\t/, $line);
	$index{lc($name)}=$set;
}
close INFO;

my (%distribution, %sets);
open(LOG, "<".$log)|| die $!;
while(my $line=<LOG>){
	next if ($line=~ /^#/);
	chomp $line;
	next unless $line;

	my($ref, @qList)=split(/\t/, $line);
	foreach my $query(@qList){
		my $set=$index{lc($query)} ? $index{lc($query)} : "Unassigned";
		$distribution{$ref}{$set}++;
		$sets{$set}++;
	}
}
close LOG;
my @setList=keys(%sets);

open(OUT, ">".$out) || die $!;
if(-e $map){
	open(MAP, "<".$map) || die $!;
	while(my $line=<MAP>){
		if(($. <= 5) && ($line=~ /^#/)){
			print OUT $line;
		}
		elsif(($. == 6) && ($line=~ /^#/)){
			chomp $line;
			$line.= "\t".$_ foreach @setList;
			print OUT $line."\n";
		}
		else{
			chomp $line;
			my($ref, @data)=split(/\t/, $line);
			foreach my $set(@setList){
				my $num=$distribution{$ref}{$set} ?  $distribution{$ref}{$set} : "0";
				$line.= "\t". $num;
			}
			print OUT $line."\n";
		}
	}
	close MAP;
}
else{
	print OUT "# REFERENCE_REGION";
	print OUT "\t".$_ foreach (@setList);
	print OUT "\n";
	foreach my $ref(keys %distribution){
		my $line=$ref;
		foreach my $set(@setList){
			my $num=$distribution{$ref}{$set} ?  $distribution{$ref}{$set} : "0";
			$line.="\t".$num;
		}
		print OUT $line."\n";
	}
}
close OUT;

print "# Total Regions identified in ".$_."\t".$sets{$_}."\n" foreach (keys %sets);
exit 0;
