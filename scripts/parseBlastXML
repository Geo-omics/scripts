#!/usr/bin/perl
use strict;
use Bio::SearchIO; 
use Getopt::Long;

=head1 NAME

parseBlastXML - parse and print BlastXML results


=head1 SYNOPSIS

B<parseBlastXML> -b <blastXML file>


=head1 DESCRIPTION

parse BlastXML results and print out Query, Subj, %id, evalue, bitScore. To get more contact me.


=head1 OPTIONAL

-o output file name; default processID.tsv,
-s minimum bit score; default 0

=head4 NOTE:

To use this script Bioperl MUST be installed.
For our lab, here is how you can access Bioperl for this script:

 1) Make sure you're on Cayman.
 2) type "/opt/package/perl5/5.12.2/bin/perl" instead of just "perl" while running the script. example:

   /opt/package/perl5/5.12.2/bin/perl parseBlastXML.pl -b <blastXML file>


=head1 AUTHOR

 Sunit Jain, July 2011
 sunitj [AT] umich [DOT] edu


=head1 SEE ALSO

L<omics(1)>, L<illumina-reads-processing(7)>

=head2 Other local resources

=over

=item [1]

L<HTML documentation|file:///usr/share/doc/geo-omics-scripts/html/index.html>

=item [2]

L<Omics workflow documentation [PDF]|file:///usr/share/doc/geo-omics-scripts/Geomicro-Illumina-Reads-Processing-Pipeline.pdf>

=back

=head2 Web

=over

=item [3]

L<Workflow documentation [PDF]|https://drive.google.com/open?id=0BxFSivK8RfJed05wamtrbEVUeE0>

=item [4]

L<Website|http://www.earth.lsa.umich.edu/geomicrobiology/>

=item [5]

L<Github repository|https://github.com/Geo-omics/scripts>

=back

=cut

my $blastXml;
my $tab=$$.".tsv";
my $bs=0;
GetOptions(
	'b:s'=>\$blastXml,
	'o:s'=>\$tab,
	's:f'=>\$bs,
);

open (OUT, ">".$tab);
print OUT "#File:$blastXml\tMin_BitScore:$bs\n";
print OUT "#Query\tHit\t\%ID\tEvalue\tBitScore\n";
chomp($blastXml);

my $in = new Bio::SearchIO(-format => 'blastxml', -file=> $blastXml);
while( my $result = $in->next_result ) {
  ## $result is a Bio::Search::Result::ResultI compliant object
	while( my $hit = $result->next_hit ) {
		## $hit is a Bio::Search::Hit::HitI compliant object
		while( my $hsp = $hit->next_hsp ) {
		## $hsp is a Bio::Search::HSP::HSPI compliant object
			if($hsp->score >= $bs){
				print OUT $result->query_name,
				"\t", $hit->name,
				"\t", $hsp->percent_identity,
				"\t", $hsp->evalue,
				"\t", $hsp->score,"\n";
			}
		}
	}
}
