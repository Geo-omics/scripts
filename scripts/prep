#!/bin/bash
#
# Copyright (c) 2017 Regents of The University of Michigan.
# All Rights Reserved.
#
# Author: Robert <heinro@med.umich.edu>
#
set -e
# shellcheck disable=SC2034
{
USAGE="[OPTIONS]... [RAWDATA]..."
HELP="Prepare fastq files for processing with Geomicro Illumina Reads Pipeline"
ARG_HELP="
    RAWDATA...          List of fastq.gz files or path to directory containing them
			By default this is the current directory
    --force             Allow overwrite existing files
"
MORE_HELP="
prep prepares raw meta-geomic sequencing data in fastq.gz format for processing

prep is part of the omics(1) tool chain
"

LONG_OPTIONS=force,lane:,sample:
CHECK_PROGS="gunzip"
}

handle_options () {
    if [ "$#" -gt 0 ]; then
	case "$1" in
	    (--force)
	        FORCE=true
	        return 1;;
        esac
    else
        return 0
    fi
}

##########################
# default variable values
##########################

# by default abort when output files exists
FORCE=false

# shellcheck source=../lib/liba.sh
# shellcheck disable=SC1091
. "$(dirname "$0")/../share/geo-omics-scripts/liba.sh" || (echo "Failed to source script library"; exit 1)

# handle non-option (positional) parameters
declare -a RAWDATA
if [ "$#" -gt 0 ]; then
    RAWDATA=("${@}")
else
    # default
    RAWDATA=($PWD)
fi

if [ ${#RAWDATA[@]} -eq 1 ] && [ -d "${RAWDATA[0]}" ]; then
    raw_home=${RAWDATA[0]}
    RAWDATA=($(find "$raw_home" -name "*.fastq" -or -name "*.fastq.gz" | sort))
fi

unique_ids=($(for i in "${RAWDATA[@]}"; do basename "$i" | sed -r 's/(_L[0-9]+).*/\1/; s/_.*_/_/'; done | sort -u))
unique_ids_no_lane=($(for i in "${RAWDATA[@]}"; do basename "$i" | cut -d _ -f 1; echo; done | sort -u))
if [ "$(echo "${unique_ids[@]}" | wc -w)" -gt "$(echo "${unique_ids_no_lane[@]}" | wc -w)" ]; then
    use_lane=true
    if [ "$VERBOSITY" -gt 1 ]; then info "Using lane to uniquly identify samples"; fi
else
    use_lane=false
fi

for id in "${unique_ids[@]}"; do
    samp_id=${id/%_*/}
    lane=${id/#*_/}
    if [ "$VERBOSITY" -gt 2 ]; then info "unique id: $id, sample: ${samp_id}, lane: $lane"; fi
    if $use_lane; then
        sample_dir=$WORK_DIR/$id
    else
	# remove underscore and lane
	sample_dir=$WORK_DIR/${samp_id}
    fi
    # shellcheck disable=SC2086
    $MKDIR -p "$sample_dir"
    for dir in fwd rev; do
        if [ $dir == fwd ]; then
	    dirnum=1
        else
	    dirnum=2
        fi
        out="$sample_dir/$dir.fastq"
        [ ! -e "$out" ] || $FORCE || abort "$out already exist.  Clean up output directory before continuing."
        for file in "${RAWDATA[@]}"; do
	    # Note: order of files determined by RAWDATA.  If a directory was given, it got sorted to a sane order
	    # but user could give fastq files on command line in any order.  But order *should not* matter!
	    if [[ $file =~ /${samp_id}.*_S[0-9]+_${lane}_R${dirnum}_[0-9]+\.fastq ]]; then
		# shellcheck disable=SC2086
		$GUNZIP -c "$file" >> "$out"
	    fi
	done
    done
done

# gmb: output: fwd.fastq
# gmb: output: rev.fastq
# gmb: args: --force {{ sample_fastq_gz }}
