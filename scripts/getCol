#!/usr/bin/perl

# Copyright 2013, 2015, 2019 Regents of The University of Michigan.

# This file is part of geo-omics-scripts.

# Geo-omics-scripts is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.

# Geo-omics-scripts is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.

# You should have received a copy of the GNU General Public License along
# with Geo-omics-scripts.  If not, see <https://www.gnu.org/licenses/>.

=head1 NAME

getCol - extract the desired column number from a tab delimited file.


=head1 SYNOPSIS

B<getCol> -i <tab delimited file>


=head1 DESCRIPTION

extract the desired column number from a tab delimited file.


=head1 OPTIONAL

-c cloumn number to extract; default col 1
NOTE: to count from the last column start counting from '-1' eg: -1, -2, -3 and so on.
-o output file name; default processID.list
-u print unique values only; default print everything.
-t print unique values with their tallies


=head1 EXAMPLE

For UNIQUE values in the column:
B<getCol> -i fileWithManyColumns.txt -o fileWithOneColumnOfUniques.txt -c 2 -u

For ALL values in the column, in order of appearence.
B<getCol> -i fileWithManyColumns.txt -o fileWithOneColumn.txt -c 2


=head1 AUTHOR

SUNIT JAIN
sunitj [AT] umich [DOT] edu


=head1 SEE ALSO

L<omics(1)>, L<illumina-reads-processing(7)>

=head2 Other local resources

=over

=item [1]

L<HTML documentation|file:///usr/share/doc/geo-omics-scripts/html/index.html>

=item [2]

L<Omics workflow documentation [PDF]|file:///usr/share/doc/geo-omics-scripts/Geomicro-Illumina-Reads-Processing-Pipeline.pdf>

=back

=head2 Web

=over

=item [3]

L<Workflow documentation [PDF]|https://drive.google.com/open?id=0BxFSivK8RfJed05wamtrbEVUeE0>

=item [4]

L<Website|http://www.earth.lsa.umich.edu/geomicrobiology/>

=item [5]

L<Github repository|https://github.com/Geo-omics/scripts>

=back

=cut

use strict;
use Getopt::Long;

my $in;
my $col=1;
my $out = $$.".list";
my $u;
my $t;
GetOptions(
	'i|in:s'=>\$in,
	'c|col:i'=>\$col,
	'o|out:s'=>\$out,
	'u|unique'=>\$u,
	't|tally'=>\$t,
	'h|help'=>sub{ system("perldoc", $0); exit;},
);

if (! $in){ system("perldoc", $0); exit;}
my $c;
if ($col > 0){
	$c= $col - 1;
}
else{
	$c=$col;
}
my %seen;
open(FILE, $in) || die "[error] $ARGV[0]:$!\n";
open (OUT, ">".$out);
print OUT "\#Column #".$col."\n";

print "printing unique values with tallies.\n" if ($t);
print "printing unique values only.\n" if ($u && ! $t);
print "printing Column $col in order of appearence.\n" if (! $u && ! $t);

while (my $line=<FILE>){
	next if $line=~ m/^#/;
	chomp $line;
	$line=~ s/\r//g;
	next unless $line;
	my(@row)=split(/\t/, $line);
	print OUT $row[$c]."\n" if (! $u && ! $t);
	$seen{$row[$c]}++;
}

if ($u || $t){
	while (my ($k, $v)=each (%seen)){
		if ($t){
			print OUT $k."\t".$v."\n";
		}
		else{
			print OUT $k."\n";
		}
	}
}
else{
	exit;
}
