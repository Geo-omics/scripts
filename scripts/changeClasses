#!/usr/bin/perl

# Copyright 2019 Regents of The University of Michigan.

# This file is part of geo-omics-scripts.

# Geo-omics-scripts is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.

# Geo-omics-scripts is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.

# You should have received a copy of the GNU General Public License along
# with Geo-omics-scripts.  If not, see <https://www.gnu.org/licenses/>.


=head1 NAME

changeClasses - Edit the *.cls file to change the class numbers for a given list of contig names.


=head1 SYNOPSIS

B<changeClasses> B<-cls> esom.cls B<-names> esom.names B<-list> contigs.list -o output.cls


=head1 DESCRIPTION

Edit the *.cls file to change the class numbers for a given list of contig names.


=head1 OPTIONS

=over 8

=item B<-cls> I<CHARACTERS>

*.cls file produced by the esomWrapper script

=item B<-names> I<CHARACTERS>

*.names file produced by the esomWrapper script

=item B<-list> I<CHARACTERS>

list of contig names(replace all special chracters with '_')

=item B<-tag> I<CHARACTERS>

new class name/number to be assigned.[default=next available class number]

=item B<-out> I<CHARACTERS>

new class file. default: esom_edited.cls

=item B<-version>, B<-v> I<BOOLEAN>

version of the current script

=item B<-help>, B<-h> I<BOOLEAN>

This message.

=back


=head1 AUTHOR

Sunit Jain, (Fri Dec  6 08:59:27 EST 2013)
sunitj [AT] umich [DOT] edu


=head1 SEE ALSO

L<omics(1)>, L<illumina-reads-processing(7)>

=head2 Other local resources

=over

=item [1]

L<HTML documentation|file:///usr/share/doc/geo-omics-scripts/html/index.html>

=item [2]

L<Omics workflow documentation [PDF]|file:///usr/share/doc/geo-omics-scripts/Geomicro-Illumina-Reads-Processing-Pipeline.pdf>

=back

=head2 Web

=over

=item [3]

L<Workflow documentation [PDF]|https://drive.google.com/open?id=0BxFSivK8RfJed05wamtrbEVUeE0>

=item [4]

L<Website|http://www.earth.lsa.umich.edu/geomicrobiology/>

=item [5]

L<Github repository|https://github.com/Geo-omics/scripts>

=back

=cut

use strict;
use Getopt::Long;
use File::Basename;

my($cls, $names, $list, $tag, $out);
my $help;
my $version="changeClasses\tv0.1.1";
GetOptions(
	'c|cls:s'=>\$cls,
	'n|names:s'=>\$names,
	'l|list:s'=>\$list,
	'tag:s'=>\$tag,
	'o|out:s'=>\$out,
	'v|version'=>sub{print $version."\n"; exit;},
	'h|help'=>sub{system("perldoc $0 \| cat"); exit;},
);
print "\# $version\n";

die "Missing required input files. See '$0 -h' for help on how to use the script\n" if((! $cls)||(! $names)||(! $list));
$out=fileparse($cls,".cls")."_edited.cls" if (! $out);

open(LIST, "<".$list)||die $!;
my %index;
while(my $line=<LIST>){
	$line=strip($line);
	$index{lc($line)}++;
}
close LIST;

open(NAMES, "<".$names)||die $!;
my %num_name;
while(my $line=<NAMES>){
	$line=strip($line);
	next if ($line=~ /^%/);
	
	my($number, $window, $name)=split(/\t/, $line);
	next unless ($index{lc($name)});
	$num_name{$number}++;
}
close NAMES;

open(CLS, "<".$cls)|| die $!;
open(NCLS, ">".$out)|| die $!;
my $num_classes=-1;
while(my $line=<CLS>){
	$line=strip($line);
	if ($line=~ /^%/){
		print NCLS $line."\n";
		$num_classes++;
	}
	else{
		if($.==($num_classes+2)){
			print NCLS "%".($num_classes)."\t".
			($tag ? $tag : $num_classes)."\t".
			getRandomColor()."\n";
		}
		my($number, $class)=split(/\t/, $line);
		if($num_name{$number}){
			print NCLS $number."\t".$num_classes."\n";
		}
		else{
			print NCLS $line."\n";
		}
	}
}
close CLS;
close NCLS;

sub strip{
	my $data=shift;
	chomp $data;
	$data=~ m/^\s+/;
	$data=~ m/\s+$/;
	return $data;
}

sub getRandomColor {
    my ($r, $g, $b) = map { int rand 256 } 1 .. 3;
    my $color= join("\t", $r, $g, $b);
    return ($color);
}

