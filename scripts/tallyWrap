#!/usr/bin/perl

# Copyright 2019 Regents of The University of Michigan.

# This file is part of geo-omics-scripts.

# Geo-omics-scripts is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.

# Geo-omics-scripts is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.

# You should have received a copy of the GNU General Public License along
# with Geo-omics-scripts.  If not, see <https://www.gnu.org/licenses/>.


=head1 NAME

tallyWrap - count hits above given bit score

=head1 SYNOPSIS
In multiple blast outputs, count the number of times a query gets a hit above a certain bit score:

 B<tallyWrap> -ext blastp -m masterList_output -t combinedTally_output -s 40

In multiple tab delimited files, for each value in the first column, combine the values of the last column from each file into a combined tabular file:

 B<tallyWrap> -ext blastp -m masterList_output -t combinedTally_output -values


=head1 DEPENDENCIES

 getMasterList
 tally
 tally-weave


=head1 SEE ALSO

L<omics(1)>, L<illumina-reads-processing(7)>

=head2 Other local resources

=over

=item [1]

L<HTML documentation|file:///usr/share/doc/geo-omics-scripts/html/index.html>

=item [2]

L<Omics workflow documentation [PDF]|file:///usr/share/doc/geo-omics-scripts/Geomicro-Illumina-Reads-Processing-Pipeline.pdf>

=back

=head2 Web

=over

=item [3]

L<Workflow documentation [PDF]|https://drive.google.com/open?id=0BxFSivK8RfJed05wamtrbEVUeE0>

=item [4]

L<Website|http://www.earth.lsa.umich.edu/geomicrobiology/>

=item [5]

L<Github repository|https://github.com/Geo-omics/scripts>

=back

=cut


use strict;
use Getopt::Long;
use File::Spec::Functions;
use File::Which;

my $masterList;
my $ext="blastn";
my $combinedTally;
my $bs=0;
my $printValue; # column number (start counting from 1)
my $fasta; # query fasta
GetOptions(
	'ext:s'=>\$ext,
	'm:s'=>\$masterList,
	't:s'=>\$combinedTally,
	's:f'=>\$bs,
	'value|values:i'=>\$printValue,
	'f|fasta:s'=>\$fasta,
);

#Check for dependencies
my @deps = ('getMasterList', 'tally', 'tally-weave');
foreach $dep (@deps) {
    my $p = catfile('.', $dep);
    if (-x $p) {
        $dep = $p;
    } else {
        $dep = which $dep or die "Could not find dependency: $dep";
    }
}
my ($master_list_script, $tally_script, $tally_weave_script) = @deps;

my @files=glob("*.$ext");
print "Creating MasterList\n";
system("$master_list_script -o ".$masterList." -s ".$bs.($ext ? " -e $ext" : ""));
foreach my $f(@files){
	print "\tTally: $f\n";
	my($name, $ext)=split(/\./, $f);
	my $tallyFile=$name.".tally";
	system("$tally_script -m ".$masterList." -i ".$f ." -o ".$tallyFile." -s ".$bs.($printValue ? " -values $printValue" : "").($fasta ? " -fasta $fasta":""));
}
print "Weaving all tally files...\n";
system("$tally_weave_script -o ".$combinedTally);
exit;
