#!/bin/bash
#
# Copyright (c) 2017 Regents of The University of Michigan.
# All Rights Reserved.
#
# Author: Robert <heinro@med.umich.edu>
#

set -e
# shellcheck disable=SC2034
{
USAGE="[OPTIONS]..."
HELP="quality control for a sample's fastq files"
ARG_HELP="
  -f, --fwd             Fastq file with forward reads, default is fwd.fastq
  -r, --rev             Fastq file with reverse reads default is rev.fastq
      --clean-only      Delete previously created files and stop.
  -a, --adapters=FILE   Specifies the adapters file to be used.  By default the
                        Illumina adapter file TruSeq3-PE-2.fa as distributed by
			the Trimmomatic project will be used.
      --keep-all	Keep all intermediate files, by default some not-so-important
			intermediate results will be deleted to save disk space
      --less-mem        Use less memory during de-replication at the expense of
                        computing time
      --no-dereplicate  Skip the de-replication step
      --no-interleave   Skip building the interleaved reads file
      --no-fasta-interleave   Skip building the interleaved fasta file,
                              interleaved fastq will still be build
"
MORE_HELP="
qc implements the QC part of the Geomicro Illumina Reads Pipline.  At each
invocation qc will clean the directory of what the script thinks are previously
generated files.

qc is part of the omics(1) tool chain.
"
CHECK_PROGS="fastqc scythe sickle interleave dereplicate"
SHORT_OPTIONS=a:,f:,r:
LONG_OPTIONS=clean-only,adapters:,fwd:,rev:,keep-all,less-mem,no-dereplicate,no-fasta-interleave,no-interleave
}

handle_options () {
    if [ "$#" -gt 0 ]; then
	case "$1" in
	    (-f|--fwd)
		FWD_FASTQ=$2
		return 2;;
	    (-r|--rev)
		REV_FASTQ=$2
		return 2;;
	    (-a|--adapters)
		ADAPTERS=$2
		return 2;;
	    (--clean-only)
	        CLEAN_ONLY=true
	        return 1;;
	    (--keep-all)
	        KEEPALL=true
	        return 1;;
	    (--less-mem)
	        LESSMEM=true
	        return 1;;
	    (--no-dereplicate)
	        DEREPLICATION=false
	        return 1;;
	    (--no-interleave)
	        INTERLEAVE=false
	        return 1;;
	    (--no-fasta-interleave)
	        INTERLEAVE_FASTA=false
	        return 1;;
        esac
    else
        return 0
    fi
}

##########################
# default variable values
##########################

# Set adapter file depending on server
ADAPTERS_FLUX=/sw/lsa/centos7/trimmomatic/0.36/adapters/TruSeq3-PE-2.fa
ADAPTERS_VONDAMM=/opt/packages/Trimmomatic/0.32/adapters/TruSeq3-PE-2.fa
if [ -r $ADAPTERS_FLUX ]; then ADAPTERS=$ADAPTERS_FLUX; else ADAPTERS=$ADAPTERS_VONDAMM; fi

# default input files as produced by prep script
FWD_FASTQ=fwd.fastq
REV_FASTQ=rev.fastq
#
CLEAN_ONLY=false
# Remove intermediate results by default
KEEPALL=false
# parallelize dereplicate calls
LESSMEM=false
#
DEREPLICATION=true
INTERLEAVE=true
INTERLEAVE_FASTA=true

# shellcheck source=../lib/liba.sh
# shellcheck disable=SC1091
. "$(dirname "$0")/../share/geo-omics-scripts/liba.sh" || (echo "Failed to source script library"; exit 1)

# handle non-option parameters
if [ "$#" -gt 0 ]; then
    abort "Unknown parameters: ${*}"
fi

#########################
# some input sanitation
#########################
[ -r "$ADAPTERS" ] || abort "Adapters file not found: $ADAPTERS"
[ -r "$FWD_FASTQ" ] || abort "Forward reads file not found: $FWD_FASTQ"
[ -r "$REV_FASTQ" ] || abort "Reverse reads file not found: $REV_FASTQ"

#################################
# do stuff
################################

# get root of input file names
fwd=$(basename "$FWD_FASTQ" .fastq)
rev=$(basename "$REV_FASTQ" .fastq)
[ "$fwd" != "$rev" ] || abort "Forward and reverse reads filenames are equal?"

clean_all () {
    clean_intermediates
    # clean final results
    $RM -rf -- FASTQC
    $RM -f -- {"$fwd","$rev"}{_derep,}_scythe_sickle.fastq
    $RM -f -- dt_int.fast{a,q}
}

clean_intermediates () {
    # clean up intermediate results
    $RM -f -- {"$fwd","$rev"}_derep.fastq
    $RM -f -- {"$fwd","$rev"}{_derep,}_scythe.fastq
    $RM -f -- {"$fwd","$rev"}{_derep,}_matches.fastq
    $RM -f -- {"$fwd","$rev"}.clust{.list,}
    $RM -f -- dt_s{fwd,rev}.fast{a,q}
    
}


clean_all
! $CLEAN_ONLY || exit

$MKDIR -p FASTQC
info "pre-QC fastqc running..."
fastqc -o FASTQC -f fastq -t 2 "$FWD_FASTQ" "$REV_FASTQ" &> FASTQC/fastqc.log &

# basename for files
base=""

if $DEREPLICATION; then
    info "dereplicating..."
    base="_derep"
    # With LESSMEM the calls to dereplicate are sequential.  To do that bash
    # monitor mode is enabled, so that fg works and puts the first job to the
    # foreground before starting the second job.
    ! $LESSMEM || set -m
    dereplicate -fq "$FWD_FASTQ" -o "$fwd$base.fastq" &
    ! $LESSMEM || fg 2>/dev/null || true  # no parallel execution to preserve memory
    ! $LESSMEM || set +m
    dereplicate -fq "$REV_FASTQ" -o "$rev$base.fastq"
    $LESSMEM || wait %dereplicate

    cur_fwd=$fwd$base.fastq
    cur_rev=$rev$base.fastq
else
    base=""
    cur_fwd=$FWD_FASTQ
    cur_rev=$REV_FASTQ
fi

info "adapter trimming..."
oldbase=$base
base="${base}_scythe"
scythe -a "$ADAPTERS" -q sanger -m "$fwd${oldbase}_matches.fastq" -o "$fwd$base.fastq" "$cur_fwd" &
scythe -a "$ADAPTERS" -q sanger -m "$rev${oldbase}_matches.fastq" -o "$rev$base.fastq" "$cur_rev"
wait %scythe
info "quality score trimming..."
oldbase=$base
base="${base}_sickle"
sickle se -t sanger -f "$fwd$oldbase.fastq" -o "$fwd$base.fastq" &
sickle se -t sanger -f "$rev$oldbase.fastq" -o "$rev$base.fastq"
wait %sickle
info "post-QC fastqc run..."
wait %fastqc
fastqc -o FASTQC -f fastq -t 2 {"$fwd","$rev"}$base.fastq &>> FASTQC/fastqc.log &
if $INTERLEAVE; then
    info "interleaving..."
    if $INTERLEAVE_FASTA; then
        interleave -fastq -outfmt fasta -fwd "$fwd$base.fastq" -rev "$rev$base.fastq" -o dt &
    fi
    interleave -fastq -fwd "$fwd$base.fastq" -rev "$rev$base.fastq" -o dt
    ! $INTERLEAVE_FASTA || wait %interleave
fi
wait %fastqc
$KEEPALL || clean_intermediates
info "Done!"


# gmb: input: fwd.fastq
# gmb: input: rev.fastq
# gmb: output: dt_int.fasta
# gmb: cpus: 2
